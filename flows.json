[{"id":"aca500a5.26ea7","type":"tab","label":"Albert Master","disabled":false,"info":""},{"id":"72706932.2ca048","type":"tab","label":"Albert Worker","disabled":false,"info":""},{"id":"7744a89.2e26458","type":"tab","label":"Facebook Ads/Dynamodb","disabled":true,"info":""},{"id":"87f0e773.22b928","type":"subflow","name":"Persistence Helper","info":"","in":[{"x":45.5,"y":85,"wires":[{"id":"a2757617.757038"}]}],"out":[{"x":749.5,"y":53,"wires":[{"id":"ab2caa7c.d750f8","port":0}]},{"x":755,"y":169,"wires":[{"id":"9a388e3d.aeb97","port":0}]}]},{"id":"d2bdb924.a3fc88","type":"subflow","name":"old ebay api","info":"","in":[{"x":54,"y":111,"wires":[{"id":"9b6c3b8c.b15c88"}]}],"out":[{"x":646,"y":232,"wires":[{"id":"c31e115c.15a15","port":0}]}]},{"id":"49f6e78f.a91848","type":"subflow","name":"eBay API","info":"","in":[{"x":45.714284896850586,"y":122.85714340209961,"wires":[{"id":"456e4dfd.276fc4"}]}],"out":[{"x":628.5713214874268,"y":127.14285659790039,"wires":[{"id":"d52c5564.705d78","port":0}]}]},{"id":"8f12258d.a834d8","type":"subflow","name":"Facebook Ads","info":"","in":[{"x":154.24999237060547,"y":180.25000095367432,"wires":[{"id":"298b6c9c.fce634"}]}],"out":[{"x":3698.9999809265137,"y":178,"wires":[{"id":"826030c9.4d64f","port":0}]},{"x":3515.00004196167,"y":314.00000190734863,"wires":[{"id":"bd26c61.d037738","port":0}]},{"x":1799.0007133483887,"y":247.00002098083496,"wires":[{"id":"90bec8a7.3f5b48","port":0}]}]},{"id":"363f279c.1671a8","type":"tls-config","z":"","name":"","cert":"","key":"","ca":"","certname":"","keyname":"","caname":"","verifyservercert":false},{"id":"43749542.37d54c","type":"remote-server","z":"","name":"elastic","host":"http://elasticsearch-elasticsearch.default.svc.cluster.local:9200"},{"id":"c0e67585.074708","type":"kafka-broker","z":"","broker":"kafka.default.svc.cluster.local:9092","clientid":"node-red-6"},{"id":"3535b384.5d390c","type":"redis-config","z":0,"host":"redis-master.default.svc.cluster.local","port":"6379","dbase":"0","pass":"hLZ8J8sKM1"},{"id":"13d30f7a.59c2a1","type":"postgresdb","z":"7744a89.2e26458","hostname":"sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com","port":"5432","db":"sippycup","ssl":false},{"id":"d93577ef.f77438","type":"postgresdb","z":0,"hostname":"sippycup-postgresql.default.svc.cluster.local","port":"5432","db":"sippycup","ssl":false},{"id":"3ffd8cd4.9264b4","type":"postgresdb","z":0,"hostname":"sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com","port":"5432","db":"sippycup","ssl":true},{"id":"ded7f12b.b1d18","type":"rdkafka out","z":"aca500a5.26ea7","name":"Kafka","topic":"","key":"","partition":"0","broker":"c0e67585.074708","x":1630,"y":380,"wires":[]},{"id":"f7c26d47.9abfe","type":"inject","z":"aca500a5.26ea7","name":"","topic":"","payload":"","payloadType":"date","repeat":"60","crontab":"","once":true,"onceDelay":"3","x":190,"y":380,"wires":[["7da70950.cdd028"]]},{"id":"7da70950.cdd028","type":"change","z":"aca500a5.26ea7","name":"Set Tasks","rules":[{"t":"set","p":"payload","pt":"msg","to":"data.tasks","tot":"flow"},{"t":"set","p":"flow","pt":"msg","to":"data.name","tot":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":340,"y":380,"wires":[["78e2896d.f22e38","bc2637ed.e51ce8","65f76839.510bd8"]]},{"id":"65f76839.510bd8","type":"split","z":"aca500a5.26ea7","name":"For Each Task","splt":"\\n","spltType":"str","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":580,"y":380,"wires":[["4949ef11.8c9d5"]]},{"id":"cb3489b8.e8d988","type":"change","z":"aca500a5.26ea7","name":"Set topic","rules":[{"t":"set","p":"topic","pt":"msg","to":"$uppercase(msg.flow & '_' & msg.payload.name)","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1240,"y":520,"wires":[[]]},{"id":"263e737e.a26f4c","type":"config","z":"aca500a5.26ea7","name":"data","properties":[{"p":"data","pt":"flow","to":"{\"debug\":false,\"name\":\"albert\",\"tasks\":[{\"name\":\"1betpro\",\"enabled\":false,\"url\":\"https://1betpro.com/\",\"username\":\"אבי99\",\"password\":\"1111\"},{\"name\":\"966sport\",\"enabled\":false,\"url\":\"http://966sport.com/\",\"username\":\"X222\",\"password\":\"12345\"},{\"name\":\"pinibet\",\"enabled\":false,\"url\":\"https://ropinwev.pinbet88.com/sports-service/sv/odds/events?l=100&ot=1\",\"username\":\"avigershon\",\"password\":\"lioran020\"},{\"name\":\"facebook\",\"enabled\":true,\"accounts\":[{\"access_token\":\"EAAMU4ZAfHJMYBADRHzQrfsv3mZA3hKGxrZAtR2TT8zmZBZCU8mAmp2Y2tpum1leunpBsvusgcOItb05G4xUKSumBT2A3yNvEvNkKtoroMM8oh4V6CllFP20aNq3VXZBDNfn1TzWZAijitOjI4yvDzZAZBEq6hSPu9Yiyvv4kmxl7z6gZDZD\",\"campaigns\":[{\"effective_status\":\"ACTIVE\",\"id\":\"6090027468460\"},{\"effective_status\":\"ACTIVE\",\"id\":\"6089766492460\"}],\"id\":\"1381220405489176\"}]}]}","tot":"json"}],"active":true,"x":170,"y":200,"wires":[]},{"id":"f721cae3.107988","type":"json","z":"aca500a5.26ea7","name":"","property":"payload","action":"str","pretty":false,"x":1430,"y":380,"wires":[["ded7f12b.b1d18","4e3fd979.567268","a08741b9.d0c0a"]]},{"id":"3183b6e9.8de4ea","type":"change","z":"aca500a5.26ea7","name":"Set Common Params","rules":[{"t":"set","p":"payload.debug","pt":"msg","to":"debug","tot":"flow"},{"t":"set","p":"payload.flow","pt":"msg","to":"flow","tot":"msg"},{"t":"set","p":"payload.delay","pt":"msg","to":"delay","tot":"flow"},{"t":"set","p":"timestamp","pt":"msg","to":"","tot":"date"}],"action":"","property":"","from":"","to":"","reg":false,"x":980,"y":380,"wires":[["7f46ebe0.6fed64","89599c12.06321","f523bf20.4abe3"]]},{"id":"ad112b19.1a9178","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":true,"tostatus":false,"complete":"true","x":1430,"y":440,"wires":[]},{"id":"5a2c3743.742b08","type":"config","z":"aca500a5.26ea7","name":"debug","properties":[{"p":"debug","pt":"flow","to":"true","tot":"bool"}],"active":true,"x":390,"y":200,"wires":[]},{"id":"78e2896d.f22e38","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":true,"complete":"topic","x":560,"y":320,"wires":[]},{"id":"ed71a195.4fc58","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":true,"complete":"topic","x":940,"y":320,"wires":[]},{"id":"7f46ebe0.6fed64","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":true,"complete":"topic","x":1240,"y":320,"wires":[]},{"id":"87cc6828.3edc08","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":true,"complete":"topic","x":1440,"y":320,"wires":[]},{"id":"4e3fd979.567268","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":true,"complete":"topic","x":1640,"y":320,"wires":[]},{"id":"bc2637ed.e51ce8","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":550,"y":440,"wires":[]},{"id":"4db3314d.976e4","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":930,"y":440,"wires":[]},{"id":"89599c12.06321","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1230,"y":440,"wires":[]},{"id":"a08741b9.d0c0a","type":"debug","z":"aca500a5.26ea7","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1630,"y":440,"wires":[]},{"id":"4949ef11.8c9d5","type":"switch","z":"aca500a5.26ea7","name":"","property":"payload.enabled","propertyType":"msg","rules":[{"t":"true"}],"checkall":"true","repair":false,"outputs":1,"x":750,"y":380,"wires":[["3183b6e9.8de4ea","ed71a195.4fc58","4db3314d.976e4"]]},{"id":"3b2f8d91.8307b2","type":"json","z":"72706932.2ca048","name":"","property":"payload","action":"obj","pretty":false,"x":230,"y":320,"wires":[["2e292b0d.4abd14","90443b65.a1a688"]]},{"id":"35a6dd67.524e82","type":"switch","z":"72706932.2ca048","name":"Task Router","property":"website.name","propertyType":"msg","rules":[{"t":"eq","v":"1betpro","vt":"str"},{"t":"eq","v":"966sport","vt":"str"},{"t":"eq","v":"pinibet","vt":"str"},{"t":"eq","v":"facebook","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":710,"y":240,"wires":[[],[],[],["b805e6b0.1b8008"]]},{"id":"8ae4bf07.b9737","type":"rdkafka in","z":"72706932.2ca048","name":"","topic":"^ALBERT_*","cgroup":"albert","autocommit":true,"broker":"c0e67585.074708","x":70,"y":320,"wires":[["3b2f8d91.8307b2"]]},{"id":"4a71e3b5.f78e4c","type":"debug","z":"72706932.2ca048","name":"","active":false,"tosidebar":true,"console":false,"tostatus":true,"complete":"payload","x":1219,"y":179.99999904632568,"wires":[]},{"id":"b50b2b0e.0d4a48","type":"config","z":"aca500a5.26ea7","name":"delay","properties":[{"p":"delay","pt":"flow","to":"0","tot":"num"}],"active":true,"x":590,"y":200,"wires":[]},{"id":"6a20042c.cd458c","type":"inject","z":"aca500a5.26ea7","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":180,"y":560,"wires":[["211b0ffa.fd4b2"]]},{"id":"a8f2582.6f770a8","type":"debug","z":"aca500a5.26ea7","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":810,"y":560,"wires":[]},{"id":"211b0ffa.fd4b2","type":"function","z":"aca500a5.26ea7","name":"Delete Redis keys","func":"\nmsg.payload = ['1betpro_session']\n    \nreturn msg;","outputs":1,"noerr":0,"x":390,"y":560,"wires":[["a8f2582.6f770a8"]]},{"id":"f522eff1.97f54","type":"function","z":"72706932.2ca048","name":"Set Task","func":"\nlet task_json = JSON.stringify(msg.payload);\n\nmsg.payload.topic = msg.topic;\nmsg = msg.payload;\nmsg.website = JSON.parse(task_json);\nmsg.task = JSON.parse(task_json);\n\nreturn msg;","outputs":1,"noerr":0,"x":540,"y":240,"wires":[["35a6dd67.524e82"]]},{"id":"4c2d25c3.a769cc","type":"split","z":"8f12258d.a834d8","name":"For each account","splt":"\\n","x":676,"y":179.0000057220459,"wires":[["bfbc2fe8.7fbde"]]},{"id":"76864493.930f1c","type":"http request","z":"8f12258d.a834d8","name":"Get Facebook active campaigns","method":"GET","ret":"obj","url":"https://graph.facebook.com/v2.11/act_{{{payload.id}}}/campaigns/?fields=effective_status&filtering=[{'field':'effective_status','operator':'IN','value':['ACTIVE']}]&access_token={{{payload.access_token}}}","tls":"","x":1110,"y":180,"wires":[["cbd17d9d.b7716"]]},{"id":"5a9f403f.b12a4","type":"function","z":"7744a89.2e26458","name":"build params","func":"msg.params = {}\n\nmsg.params.Item = {\n    \"id\": msg.fb_account.id,\n    \"campaigns\" : msg.payload.data,\n    \"access_token\": msg.fb_account.access_token\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1530,"y":260,"wires":[["e42594b9.2bee28"]]},{"id":"bfbc2fe8.7fbde","type":"function","z":"8f12258d.a834d8","name":"build fb_account","func":"msg.fb_account = {\n    \"id\": msg.payload.id,\n    \"access_token\": msg.payload.access_token\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":880,"y":180,"wires":[["76864493.930f1c"]]},{"id":"80a9f617.a69888","type":"http request","z":"8f12258d.a834d8","name":"Get Facebook insights","method":"GET","ret":"obj","url":"https://graph.facebook.com/v2.11/insights/?fields=impressions,campaign_id,campaign_name,adset_id,adset_name,ad_id,ad_name,spend,actions,action_values&date_preset=lifetime&level=ad&limit=10000&ids={{{campaign.id}}}&p=2&access_token={{{fb_account.access_token}}}","tls":"","x":2080,"y":180,"wires":[["19818e11.bed8e2"]]},{"id":"e42594b9.2bee28","type":"function","z":"7744a89.2e26458","name":"build campaigns","func":"msg.payload = msg.params.Item.campaigns;\n\ndelete msg.parts;\n\nreturn msg;","outputs":1,"noerr":0,"x":1700,"y":260,"wires":[[]]},{"id":"c0694fa4.fb584","type":"split","z":"8f12258d.a834d8","name":"","splt":"\\n","x":1399.0000267028809,"y":244.99999809265137,"wires":[["1c69567e.75732a"]]},{"id":"1c69567e.75732a","type":"function","z":"8f12258d.a834d8","name":"build campaign","func":"msg.campaign = {\n    \"id\": msg.payload.id,\n    \"account\" : {\n        \"id\" : msg.fb_account.id\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1481.0000686645508,"y":182.0000057220459,"wires":[["90bec8a7.3f5b48"]]},{"id":"298b6c9c.fce634","type":"function","z":"8f12258d.a834d8","name":"set timestamp","func":"/*var message = msg;\n\nmsg = {};\n\nmsg.refferal_message = message;\n//msg.params = {};\n*/\n\nmsg.timestamp = new Date().getTime();//msg.payload;\n\nglobal.set(\"threshold\",5);\nglobal.set(\"sc_weight\",0.9);\n\nreturn msg;","outputs":1,"noerr":0,"x":314.24999237060547,"y":180.25000095367432,"wires":[["da4376a7.6f9bc8"]]},{"id":"19818e11.bed8e2","type":"function","z":"8f12258d.a834d8","name":"Get campaign data","func":"msg.payload = msg.payload[msg.campaign.id].data;\n\nmsg.payload.forEach( function (ad){\n    for (var i = 0; i < msg.campaign.adsets.length; i++) {\n        if(ad.adset_id === msg.campaign.adsets[i].id){\n            \n            ad.adset_lifetime_budget = msg.campaign.adsets[i].lifetime_budget;\n            ad.adset_daily_budget = msg.campaign.adsets[i].daily_budget;\n            ad.adset_budget_remaining = msg.campaign.adsets[i].budget_remaining;\n\n        }\n    }\n});\n\nreturn msg;","outputs":1,"noerr":0,"x":2290,"y":180,"wires":[["ac391b5.1ac6ce8"]]},{"id":"ac391b5.1ac6ce8","type":"join","z":"8f12258d.a834d8","name":"","mode":"auto","build":"merged","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","timeout":"","count":"","x":2450,"y":180,"wires":[["d8547a4f.4ac898"]]},{"id":"d8547a4f.4ac898","type":"function","z":"8f12258d.a834d8","name":"aggregate insights","func":"msg.ads = [];\nmsg.adsets = [];\nmsg.campaigns = [];\nmsg.account = {\n                \"account_id\" : msg.campaign.account.id,\n                \"pre_conversions\" : 0,\n                \"conversions\" : 0,\n                \"revenue\" : 0\n            };\n\nvar pre_conversion_actions = [\"offsite_conversion.fb_pixel_complete_registration\"];\nvar conversion_actions = [\"offsite_conversion.fb_pixel_purchase\"];\nvar revenue_actions = [\"offsite_conversion.fb_pixel_search\"];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    for (var j = 0; j < msg.payload[i].length; j++) {\n        \n        var actions = [];\n        var action_values = [];\n        \n        if(msg.payload[i][j].actions!==undefined) actions = msg.payload[i][j].actions;\n        if(msg.payload[i][j].action_values!==undefined) action_values = msg.payload[i][j].action_values;\n        \n        var ad = msg.payload[i][j];\n            \n        ad.pre_conversions = 0;\n        ad.conversions = 0;\n        ad.revenue = 0;\n        \n        actions.forEach( function (arrayItem)\n        {\n            if(pre_conversion_actions.indexOf(arrayItem.action_type)>=0 ){\n                ad.pre_conversions = ad.pre_conversions + parseInt(arrayItem.value);\n            }\n            \n            if(conversion_actions.indexOf(arrayItem.action_type)>=0 ){\n                ad.conversions = ad.conversions + parseInt(arrayItem.value);\n            }\n            \n        });\n        \n        action_values.forEach( function (arrayItem)\n        {\n            if(revenue_actions.indexOf(arrayItem.action_type)>=0 ){\n                ad.revenue = ad.revenue + parseInt(arrayItem.value);\n            }\n        });\n        \n        var adset = null;\n        \n        msg.adsets.forEach( function (obj){\n            try{\n                if (obj.adset_id == ad.adset_id){\n                    adset = obj;\n                }\n            }\n            catch(e){}\n        });\n        \n        if(adset===null){\n            msg.adsets.push({\n                \"adset_id\" : ad.adset_id,\n                \"pre_conversions\" : ad.pre_conversions,\n                \"conversions\" : ad.conversions,\n                \"revenue\" : ad.revenue,\n                \"lifetime_budget\" : msg.payload[i].lifetime_budget,\n                \"daily_budget\" : msg.payload[i].daily_budget,\n                \"budget_remaining\" : msg.payload[i].budget_remaining\n            });\n        }\n        else{\n            adset.pre_conversions = ad.pre_conversions + adset.pre_conversions;\n            adset.conversions = ad.conversions + adset.conversions;\n            adset.revenue = ad.revenue + adset.revenue;\n        }\n        \n        var campaign = null;\n        \n        msg.campaigns.forEach( function (obj){\n            try{\n                if (obj.campaign_id == ad.campaign_id){\n                    campaign = obj;\n                }\n            }\n            catch(e){}\n        });\n        \n        if(campaign===null){\n            msg.campaigns.push({\n                \"campaign_id\" : ad.campaign_id,\n                \"pre_conversions\" : ad.pre_conversions,\n                \"conversions\" : ad.conversions,\n                \"revenue\" : ad.revenue\n            });\n        }\n        else{\n            campaign.pre_conversions = ad.pre_conversions + campaign.pre_conversions;\n            campaign.conversions = ad.conversions + campaign.conversions;\n            campaign.revenue = ad.revenue + campaign.revenue;\n        }\n        \n        \n        msg.account.pre_conversions = ad.pre_conversions + msg.account.pre_conversions;\n        msg.account.conversions = ad.conversions + msg.account.conversions;\n        msg.account.revenue = ad.revenue + msg.account.revenue;\n        \n        \n        msg.ads.push(ad);\n        \n    }\n}\n\nmsg.payload = msg.ads;\n\nreturn msg;","outputs":1,"noerr":0,"x":2610,"y":180,"wires":[["51943b06.809eb4"]]},{"id":"51943b06.809eb4","type":"split","z":"8f12258d.a834d8","name":"","splt":"\\n","x":2770,"y":180,"wires":[["f27b9ece.423a6"]]},{"id":"f27b9ece.423a6","type":"function","z":"8f12258d.a834d8","name":"ad all hierarchy insights","func":"var ad = msg.payload;\n\nmsg.adsets.forEach( function (adset){\n    if (adset.adset_id == ad.adset_id){\n        ad.adset = adset;\n    }\n});\n\nmsg.campaigns.forEach( function (campaign){\n    if (campaign.campaign_id == ad.campaign_id){\n        ad.campaign = campaign;\n    }\n});\n\nad.account = msg.account;\n\nreturn msg;","outputs":1,"noerr":0,"x":2950,"y":180,"wires":[["3e88fcb9.d89ac4"]]},{"id":"3e88fcb9.d89ac4","type":"function","z":"8f12258d.a834d8","name":"calc SCVal","func":"var ad = msg.payload;\n\nvar threshold = global.get(\"threshold\");\nvar sc_weight = global.get(\"sc_weight\");\n\nPad = Math.min(ad.conversions/threshold,1);\nRad = (ad.revenue/ad.pre_conversions);\nPadset = Math.min(ad.adset.conversions/threshold,1);\nRadset = (ad.adset.revenue/ad.adset.pre_conversions);\nCalcPadset = (Math.max(1-Pad,0)*Padset);\nPcampaign = Math.min(ad.campaign.conversions/threshold,1);\nRcampaign = (ad.campaign.revenue/ad.campaign.pre_conversions);\nPaccount = Math.min(ad.account.conversions/threshold,1);\nRaccount = (ad.account.revenue/ad.account.pre_conversions);\n\n/*SCVal = (Pad*Rad) + \n(CalcPadset*Radset) + \n((Math.max(1-Padset-CalcPadset,0)*Pcampaign)*Rcampaign) + \n((Math.max(1 - Padset -(Padset-CalcPadset)-(Math.max(1-Padset-CalcPadset,0)),0)*Paccount)*Raccount);\n*/\n\n/*=(B2*B3) + \n((Max(1-B2,0)*B4)*B5) + \n((Max(1-B2-((Max(1-B2,0)*B4)),0)*B6)*B7) + \n((Max(1-B2 -(B4-((Max(1-B2,0)*B4)))-(Max((Max(1-B2,0)*B4),0)),0)*B8)*B9)\n*/\n\n/*msg.debug = {\n    part1 : (Pad*Rad),\n    part2 : ((Math.max(1-Pad,0)*Padset)*Radset),\n    part3 : ((Math.max(1-Padset-((Max(1-Pad,0)*Padset)),0)*Pcampaign)*Rcampaign),\n    part4 : ((Math.max(1-Padset -(Padset-CalcPadset)-(Math.max(1-Padset-CalcPadset,0)),0)*Paccount)*Raccount)\n}*/\n\nad.Pad = isNaN(Pad) ? 0 : Pad;\nad.Rad = isNaN(Rad) ? 0 : Rad;\nad.Padset = isNaN(Padset) ? 0 : Padset;\nad.Radset = isNaN(Radset) ? 0 : Radset;\nad.Pcampaign = isNaN(Pcampaign) ? 0 : Pcampaign;\nad.Rcampaign = isNaN(Rcampaign) ? 0 : Rcampaign;\nad.Paccount = isNaN(Paccount) ? 0 : Paccount;\nad.Raccount = isNaN(Raccount) ? 0 : Raccount;\n\n\nad.debug = {\n    part1 : (ad.Pad*ad.Rad),\n    part2 : ((Math.max(1-ad.Pad,0)*ad.Padset)*ad.Radset),\n    part3 : ((Math.max(1-ad.Pad-((Math.max(1-ad.Pad,0)*ad.Padset)),0)*ad.Pcampaign)*ad.Rcampaign),\n    part4 : ((Math.max(1-ad.Pad -(ad.Padset-((Math.max(1-ad.Pad,0)*ad.Padset)))-(Math.max((Math.max(1-ad.Pad,0)*ad.Padset),0)),0)*ad.Paccount)*ad.Raccount)\n}\n\nSCVal = (ad.Pad*ad.Rad) +\n((Math.max(1-ad.Pad,0)*ad.Padset)*ad.Radset) +\n((Math.max(1-ad.Pad-((Math.max(1-ad.Pad,0)*ad.Padset)),0)*ad.Pcampaign)*ad.Rcampaign) + \n((Math.max(1-ad.Pad -(ad.Padset-((Math.max(1-ad.Pad,0)*ad.Padset)))-(Math.max((Math.max(1-ad.Pad,0)*ad.Padset),0)),0)*ad.Paccount)*ad.Raccount)\n\nad.SCVal = isNaN(SCVal) ? 0 : SCVal;\n\nVRevN = (SCVal * ad.pre_conversions * sc_weight) + ((1-sc_weight) * ad.revenue);\nad.VRevN = isNaN(VRevN) ? 0 : VRevN;\n\nad.timestamp = msg.timestamp;\n\nmsg.params = {\n    \"Item\" : ad\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"x":3150,"y":180,"wires":[["bd26c61.d037738"]]},{"id":"60be90e2.97fe7","type":"http in","z":"7744a89.2e26458","name":"","url":"/sippycup/ads/fetch","method":"get","swaggerDoc":"","x":150.49999618530273,"y":649.2500114440918,"wires":[["9d5bce75.efdb"]]},{"id":"111bc642.18056a","type":"http response","z":"7744a89.2e26458","name":"","x":3100.7500343322754,"y":293.5,"wires":[]},{"id":"3ac1271c.242c08","type":"function","z":"7744a89.2e26458","name":"set payload with params.Item","func":"msg.payload = msg.params.Item;\n\nreturn msg;","outputs":1,"noerr":0,"x":955.5000076293945,"y":514.0000057220459,"wires":[["c28da6a3.3340f8"]]},{"id":"ae0d6d7c.3056c","type":"debug","z":"7744a89.2e26458","name":"","active":true,"console":"false","complete":"payload","x":587,"y":1096.7500133514404,"wires":[]},{"id":"ab2caa7c.d750f8","type":"change","z":"87f0e773.22b928","name":"","rules":[{"t":"set","p":"action","pt":"msg","to":"restore","tot":"str"}],"action":"","property":"","from":"","to":"","reg":false,"x":589.5,"y":53,"wires":[[]]},{"id":"a2757617.757038","type":"json","z":"87f0e773.22b928","name":"","x":175.5,"y":85,"wires":[["ab2caa7c.d750f8"]]},{"id":"70930308.436aac","type":"catch","z":"87f0e773.22b928","name":"","scope":["a2757617.757038"],"x":183.5,"y":117,"wires":[["edbcee33.12519"]]},{"id":"edbcee33.12519","type":"change","z":"87f0e773.22b928","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"[]","tot":"json"}],"action":"","property":"","from":"","to":"","reg":false,"x":354.5,"y":116,"wires":[["ab2caa7c.d750f8"]]},{"id":"9a388e3d.aeb97","type":"inject","z":"87f0e773.22b928","name":"Trigger restore","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":618.5,"y":169,"wires":[[]]},{"id":"cc93258a.06d618","type":"function","z":"d2bdb924.a3fc88","name":"call ebay api","func":"msg.timestamp = new Date().getTime()\n\nvar ebay = global.get('ebayapi')\n\nmsg.payload.parser = ebay.parseResponseJson\n\nebay.xmlRequest(msg.payload,\n  // gets all the items together in a merged array\n    function itemsCallback(error, itemsResponse) {\n        //global.set(\"ebay_response_\" + msg.timestamp,itemsResponse)\n    if (error) {\n        console.log(error);\n        global.set(\"ebay_response_\" + msg.timestamp,error)\n    }\n    else{\n        console.log(itemsResponse)\n        global.set(\"ebay_response_\" + msg.timestamp,itemsResponse)\n    }\n  }\n);\n\nreturn msg;","outputs":1,"noerr":0,"x":305,"y":169,"wires":[["bd64769a.9e94d8"]]},{"id":"bd64769a.9e94d8","type":"delay","z":"d2bdb924.a3fc88","name":"","pauseType":"delay","timeout":"20","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":486.5,"y":169,"wires":[["c31e115c.15a15"]]},{"id":"c31e115c.15a15","type":"function","z":"d2bdb924.a3fc88","name":"set payload","func":"msg.payload = global.get(\"ebay_response_\" + msg.timestamp)\n\nreturn msg;","outputs":1,"noerr":0,"x":586.5,"y":93,"wires":[[]]},{"id":"edd9e9f8.8519b8","type":"debug","z":"d2bdb924.a3fc88","name":"","active":true,"console":"false","complete":"false","x":704.5,"y":34,"wires":[]},{"id":"9b6c3b8c.b15c88","type":"json","z":"d2bdb924.a3fc88","name":"","x":111.5,"y":168,"wires":[["f5e91c47.9244b"]]},{"id":"f5e91c47.9244b","type":"json","z":"d2bdb924.a3fc88","name":"","x":171.5,"y":220,"wires":[["cc93258a.06d618"]]},{"id":"d52c5564.705d78","type":"function","z":"49f6e78f.a91848","name":"call ebay api","func":"var ebay = global.get('ebayapi')\nmsg.topic = \"\"\n\nmsg.payload.parser = ebay.parseResponseJson\n\nebay.xmlRequest(msg.payload,\n  // gets all the items together in a merged array\n    function itemsCallback(error, itemsResponse) {\n        msg.topic = msg.payload.opType\n        msg.payload = itemsResponse\n        msg.payload.error = error\n        node.send(msg)\n    }\n);\n","outputs":1,"noerr":0,"x":491.4285774230957,"y":127.14287185668945,"wires":[[]]},{"id":"456e4dfd.276fc4","type":"json","z":"49f6e78f.a91848","name":"","x":175.07143783569336,"y":124.71428871154785,"wires":[["2fd1a17b.bb010e"]]},{"id":"2fd1a17b.bb010e","type":"json","z":"49f6e78f.a91848","name":"","x":326.5,"y":126.71426582336426,"wires":[["d52c5564.705d78"]]},{"id":"c28da6a3.3340f8","type":"function","z":"7744a89.2e26458","name":"set default values","func":"msg.payload = msg.params.Item;\nmsg.db_payload = msg.payload\n\nmsg.db_payload.impressions===undefined ? 0 : msg.db_payload.impressions\nmsg.db_payload.campaign_id===undefined ? \"\" : msg.db_payload.campaign_id\nmsg.db_payload.campaign_name===undefined ? \"\" : msg.db_payload.campaign_name\nmsg.db_payload.adset_id===undefined ? \"\" : msg.db_payload.adset_id\nmsg.db_payload.adset_name===undefined ? \"\" : msg.db_payload.adset_name\nmsg.db_payload.ad_id===undefined ? \"\" : msg.db_payload.ad_id\nmsg.db_payload.ad_name===undefined ? \"\" : msg.db_payload.ad_name\nmsg.db_payload.spend===undefined ? 0 : msg.db_payload.spend\nmsg.db_payload.date_start===undefined ? \"\" : msg.db_payload.date_start\nmsg.db_payload.date_stop===undefined ? \"\" : msg.db_payload.date_stop\nmsg.db_payload.pre_conversions===undefined ? 0 : msg.db_payload.pre_conversions\nmsg.db_payload.conversions===undefined ? 0 : msg.db_payload.conversions\nmsg.db_payload.revenue===undefined ? 0 : msg.db_payload.revenue\nmsg.db_payload.adset.adset_id===undefined ? \"\" : msg.db_payload.adset.adset_id\nmsg.db_payload.adset.pre_conversions===undefined ? 0 : msg.db_payload.adset.pre_conversions\nmsg.db_payload.adset.conversions===undefined ? 0 : msg.db_payload.adset.conversions\nmsg.db_payload.adset.revenue===undefined ? 0 : msg.db_payload.adset.revenue\nmsg.db_payload.campaign.pre_conversions===undefined ? 0 : msg.db_payload.campaign.pre_conversions\nmsg.db_payload.campaign.conversions===undefined ? 0 : msg.db_payload.campaign.conversions\nmsg.db_payload.campaign.revenue===undefined ? 0 : msg.db_payload.campaign.revenue\nmsg.db_payload.account.account_id===undefined ? 0 : msg.db_payload.account.account_id\nmsg.db_payload.account.pre_conversions===undefined ? 0 : msg.db_payload.account.pre_conversions\nmsg.db_payload.account.conversions===undefined ? 0 : msg.db_payload.account.conversions\nmsg.db_payload.account.revenue===undefined ? 0 : msg.db_payload.account.revenue\nmsg.db_payload.Pad===undefined ? 0 : msg.db_payload.Pad\nmsg.db_payload.Rad===undefined ? 0 : msg.db_payload.Rad\nmsg.db_payload.Padset===undefined ? 0 : msg.db_payload.Padset\nmsg.db_payload.Radset===undefined ? 0 : msg.db_payload.Radset\nmsg.db_payload.Pcampaign===undefined ? 0 : msg.db_payload.Pcampaign\nmsg.db_payload.Rcampaign===undefined ? 0 : msg.db_payload.Rcampaign\nmsg.db_payload.Paccount===undefined ? 0 : msg.db_payload.Paccount\nmsg.db_payload.Raccount===undefined ? 0 : msg.db_payload.Raccount\nmsg.db_payload.debug.part1===undefined ? 0 : msg.db_payload.debug.part1\nmsg.db_payload.debug.part2===undefined ? 0 : msg.db_payload.debug.part2\nmsg.db_payload.debug.part3===undefined ? 0 : msg.db_payload.debug.part3\nmsg.db_payload.debug.part4===undefined ? 0 : msg.db_payload.debug.part4\nmsg.db_payload.SCVal===undefined ? 0 : msg.db_payload.SCVal\nmsg.db_payload.VRevN===undefined ? 0 : msg.db_payload.VRevN\nmsg.db_payload.timestamp===undefined ? 0 : msg.db_payload.timestamp\nmsg.db_payload.adset_lifetime_budget===undefined ? 0 : msg.db_payload.adset_lifetime_budget\nmsg.db_payload.adset_daily_budget===undefined ? 0 : msg.db_payload.adset_daily_budget\n\nreturn msg;","outputs":1,"noerr":0,"x":1229.625015258789,"y":435.5000057220459,"wires":[["3542c3a2.eaa57c"]]},{"id":"3542c3a2.eaa57c","type":"template","z":"7744a89.2e26458","name":"insert incremental_ad_data","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"(\n  {{db_payload.impressions}},\n  '{{db_payload.campaign_id}}',\n  '{{db_payload.campaign_name}}',\n  '{{db_payload.adset_id}}',\n  '{{db_payload.adset_name}}',\n  '{{db_payload.ad_id}}',\n  '{{db_payload.ad_name}}',\n  {{db_payload.spend}},\n  '{{db_payload.date_start}}',\n  '{{db_payload.date_stop}}',\n  {{db_payload.pre_conversions}},\n  {{db_payload.conversions}},\n  {{db_payload.revenue}},\n  '{{db_payload.adset.adset_id}}',\n  {{db_payload.adset.pre_conversions}},\n  {{db_payload.adset.conversions}},\n  {{db_payload.adset.revenue}},\n  {{db_payload.campaign.pre_conversions}},\n  {{db_payload.campaign.conversions}},\n  {{db_payload.campaign.revenue}},\n  '1381220405489176',\n  {{db_payload.account.pre_conversions}},\n  {{db_payload.account.conversions}},\n  {{db_payload.account.revenue}},\n  {{db_payload.Pad}},\n  {{db_payload.Rad}},\n  {{db_payload.Padset}},\n  {{db_payload.Radset}},\n  {{db_payload.Pcampaign}},\n  {{db_payload.Rcampaign}},\n  {{db_payload.Paccount}},\n  {{db_payload.Raccount}},\n  {{db_payload.debug.part1}},\n  {{db_payload.debug.part2}},\n  {{db_payload.debug.part3}},\n  {{db_payload.debug.part4}},\n  {{db_payload.SCVal}},\n  {{db_payload.VRevN}},\n  {{db_payload.timestamp}},\n  {{db_payload.adset_lifetime_budget}},\n  {{db_payload.adset_daily_budget}}\n)","x":1525.250015258789,"y":419.25000381469727,"wires":[["cad442b2.ac6be"]]},{"id":"cad442b2.ac6be","type":"join","z":"7744a89.2e26458","name":"","mode":"custom","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":",","timeout":"","count":"","x":1659.625015258789,"y":471.75000762939453,"wires":[["f12a1235.b6733"]]},{"id":"f12a1235.b6733","type":"template","z":"7744a89.2e26458","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"INSERT INTO sippycup.incremental_ad_data\n(\n  impressions,\n  campaign_id,\n  campaign_name,\n  adset_id,\n  adset_name,\n  ad_id,\n  ad_name,\n  spend,\n  date_start,\n  date_stop,\n  pre_conversions,\n  conversions,\n  revenue,\n  adset_adset_id,\n  adset_pre_conversions,\n  adset_conversions,\n  adset_revenue,\n  campaign_pre_conversions,\n  campaign_conversions,\n  campaign_revenue,\n  account_id,\n  account_pre_conversions,\n  account_conversions,\n  account_revenue,\n  pad,\n  rad,\n  padset,\n  radset,\n  pcampaign,\n  rcampaign,\n  paccount,\n  raccount,\n  debug_part1,\n  debug_part2,\n  debug_part3,\n  debug_part4,\n  scval,\n  vrev,\n  TIMESTAMP,\n  adset_lifetime_budget,\n  adset_daily_budget\n)\nVALUES {{payload}};","x":1738.375015258789,"y":414.25000953674316,"wires":[["5c5935c7.9affdc"]]},{"id":"5c5935c7.9affdc","type":"function","z":"7744a89.2e26458","name":"","func":"msg.payload = msg.payload.replace(/&#39;/g,\"'\")\n\nreturn msg;","outputs":1,"noerr":0,"x":1860.8750267028809,"y":415.50000381469727,"wires":[["8e4eaf2c.aabab"]]},{"id":"e5973112.42921","type":"template","z":"7744a89.2e26458","name":"insert adset_inc_cf","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"insert into sippycup.adset_inc_cf\nselect  account_id,\n        campaign_id,\n        adset_id,\n        max(last_7_days_acc_spend)last_7_days_acc_spend,\n        sum(lifetime_spend) lifetime_spend,\n        sum(previous_spend) previous_spend,\n        sum(delta_spend) delta_spend,\n        sum(lifetime_pre_conversions) lifetime_pre_conversions,\n        sum(previous_pre_conversions) previous_pre_conversions,\n        sum(delta_pre_conversions) delta_pre_conversions,\n        max(last_7_days_acc_pre_conversions) last_7_days_acc_pre_conversions,\n        sum(lifetime_revenue) lifetime_revenue,\n        sum(delta_revenue) delta_revenue,\n        sum(lifetime_conversions) lifetime_conversions,\n        sum(delta_conversions) delta_conversions,\n        sum(SCVal) lifetime_SCVal,\n        sum(VRev_ad_inc) VRev_adset_inc,\n        sum(pre_conversion_cpa) pre_conversion_cpa,\n        0.6 target_roi,\n        ((case when sum(delta_spend)>0 then sum(VRev_ad_inc) else 0 end)/(case when sum(delta_spend)>0 then sum(delta_spend) else 1 end)/0.6) CF_inc,\n        timestamp,\n        previous_timestamp,\n        is_valid\nfrom (\nselect *,(VRev_ratio*delta_pre_conversions*SCVal) + (delta_revenue*(1-VRev_ratio)) VRev_ad_inc\nfrom (\nselect *,(case when ((-0.003*delta_spend) + 0.9)<0.3 then 0.3 else ((-0.003*delta_spend) + 0.9) end) VRev_ratio\nfrom (\n\nselect \n      account_id,\n      campaign_id,\n      adset_id,\n      ad_id,\n      last_7_days_acc_spend,\n      current_spend lifetime_spend,\n      previous_spend,\n      current_spend - previous_spend delta_spend ,\n      current_pre_conversions lifetime_pre_conversions,\n      previous_pre_conversions,\n      current_pre_conversions-previous_pre_conversions delta_pre_conversions,\n      last_7_days_acc_pre_conversions,\n      current_revenue lifetime_revenue,\n      current_revenue - previous_revenue delta_revenue, \n      current_conversions lifetime_conversions,\n      current_conversions - previous_conversions delta_conversions,\n      current_SCVal SCVal,\n      timestamp,\n      previous_timestamp,\n      is_valid,\n      pre_conversion_cpa\nfrom (\nselect current_data.account_id,\n        current_data.campaign_id,\n        current_data.adset_id,\n        current_data.ad_id,\n        last_7_days_acc_spend,\n        last_7_days_acc_pre_conversions,\n        current_data.spend - previous_data.spend delta_spend,\n        current_data.spend current_spend,\n        current_data.pre_conversions current_pre_conversions,\n        current_data.revenue current_revenue,\n        current_data.conversions current_conversions,\n        current_data.SCVal current_SCVal,\n        previous_data.spend previous_spend,\n        previous_data.pre_conversions previous_pre_conversions,\n        previous_data.revenue previous_revenue,\n        previous_data.conversions previous_conversions,\n        previous_data.SCVal previous_SCVal,\n        previous_data.rnk previous_version,\n        row_number() over(partition by current_data.account_id,current_data.campaign_id,current_data.adset_id,current_data.ad_id order by previous_data.rnk asc ) rnk,\n        current_data.timestamp,\n        previous_data.timestamp previous_timestamp,\n        (case when last_7_days_acc_pre_conversions>0 then last_7_days_acc_data.last_7_days_acc_spend else 0 end)/(case when last_7_days_acc_pre_conversions>0 then last_7_days_acc_pre_conversions else 1 end) pre_conversion_cpa,\n      case when (current_data.spend - previous_data.spend) > (((case when last_7_days_acc_pre_conversions>0 then last_7_days_acc_data.last_7_days_acc_spend else 0 end)/(case when last_7_days_acc_pre_conversions>0 then last_7_days_acc_pre_conversions else 1 end))*5) then true else false end is_valid\nfrom (\n            select account_id,campaign_id,adset_id,ad_id,spend,pre_conversions,revenue,conversions,SCVal,timestamp\n            from sippycup.incremental_ad_data\n            where timestamp={{timestamp}}) current_data\nleft join (\n            select account_id,campaign_id,adset_id,ad_id,spend,pre_conversions,revenue,conversions,SCVal,rnk,timestamp\n            from (\n            select incremental_ad_data.*,row_number() over(partition by incremental_ad_data.campaign_id,incremental_ad_data.adset_id,incremental_ad_data.ad_id \n                                                            order by \n                                                            (case when COALESCE(adset_inc_cf.is_valid,false) = true then 1 else -1 end) * incremental_ad_data.timestamp desc) rnk\n            from sippycup.incremental_ad_data\n            left join sippycup.adset_inc_cf\n              on incremental_ad_data.adset_id = adset_inc_cf.adset_id and\n                 incremental_ad_data.campaign_id = adset_inc_cf.campaign_id and\n                 incremental_ad_data.account_id = adset_inc_cf.account_id\n            where incremental_ad_data.timestamp<{{timestamp}}) a\n            where rnk =1) previous_data\non current_data.ad_id = previous_data.ad_id and\n   current_data.adset_id = previous_data.adset_id and\n   current_data.campaign_id = previous_data.campaign_id and\n   current_data.account_id = previous_data.account_id\nleft join (\n            select account_id,sum(max_last_7_days_acc_spend-min_last_7_days_acc_spend) last_7_days_acc_spend,sum(max_last_7_days_acc_pre_conversions-min_last_7_days_acc_pre_conversions) last_7_days_acc_pre_conversions\n            from (\n              select account_id,ad_id,min(spend) min_last_7_days_acc_spend,max(spend) max_last_7_days_acc_spend,\n                                      min(pre_conversions) min_last_7_days_acc_pre_conversions,max(pre_conversions) max_last_7_days_acc_pre_conversions\n              from sippycup.incremental_ad_data\n              where DATE_PART('hour', (current_TIMESTAMP) - (TIMESTAMP 'epoch' + (incremental_ad_data.timestamp/1000) * INTERVAL '1 second'))<=(7*24)\n              group by account_id,ad_id\n              ) last_7_days_acc_data\n            group by account_id\n          ) last_7_days_acc_data\non last_7_days_acc_data.account_id = current_data.account_id) a\n--where rnk=1\n\n\n\n) current_data\n/*where spend>0*/) a\n/*inner join (select distinct account_id,adset_id, ad_id\nfrom sippycup.incremental_ad_data) adsets\non a.ad_id = adsets.ad_id and a.account_id = adsets.account_id*/) b\ngroup by account_id,campaign_id,adset_id,timestamp,previous_timestamp,is_valid\norder by account_id,campaign_id,adset_id,timestamp,previous_timestamp,is_valid\n","x":2085.2500228881836,"y":420.5000057220459,"wires":[["98dd08db.5bd1b8","a95806d1.943928"]]},{"id":"99eb4a6c.0ff468","type":"inject","z":"7744a89.2e26458","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":143.37499237060547,"y":978.0000057220459,"wires":[["38e5a364.60e98c"]]},{"id":"98dd08db.5bd1b8","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 30000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    node.warn('done')\n    if(err) {\n      return node.error('error running query : ' + err);\n    }\n    \n    node.warn(result)\n    msg.payload = result\n    msg.topic = \"save-inc-cf\"\n    node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})","outputs":1,"noerr":0,"x":2264.000030517578,"y":420.50000381469727,"wires":[["d05994d7.668508","6843834b.6ee7bc"]]},{"id":"8e4eaf2c.aabab","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 30000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    node.warn('done')\n    if(err) {\n      return node.error('error running query', err);\n    }\n    \n    node.warn(result)\n    msg.payload = result\n    msg.payload.timestamp = msg.timestamp\n    msg.topic = \"save-inc-data\"\n    node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})","outputs":1,"noerr":0,"x":1909.0000190734863,"y":543.0000066757202,"wires":[["baca4e86.d8d71"]]},{"id":"baca4e86.d8d71","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"save-inc-data","vt":"str"}],"checkall":"true","outputs":1,"x":2009.6250228881836,"y":686.7500057220459,"wires":[["d2d5c084.2f3f4"]]},{"id":"d05994d7.668508","type":"debug","z":"7744a89.2e26458","name":"","active":true,"console":"false","complete":"true","x":2384.625,"y":530.5,"wires":[]},{"id":"a95806d1.943928","type":"debug","z":"7744a89.2e26458","name":"","active":false,"console":"false","complete":"true","x":2249.625026702881,"y":640.5000076293945,"wires":[]},{"id":"9d5bce75.efdb","type":"change","z":"7744a89.2e26458","name":"is http","rules":[{"t":"set","p":"is_http","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":207.12499618530273,"y":595.5000057220459,"wires":[["e035feb8.0f1c8"]]},{"id":"d063ccbb.eab3b","type":"switch","z":"7744a89.2e26458","name":"","property":"is_http","propertyType":"msg","rules":[{"t":"neq","v":"undefined","vt":"jsonata"},{"t":"else"}],"checkall":"true","outputs":2,"x":3004.6250343322754,"y":413.00000190734863,"wires":[["111bc642.18056a"],[]]},{"id":"9e6512e1.544e2","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 30000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    //node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    //node.warn('done')\n    if(err) {\n      return node.error('error running query : ' + err);\n    }\n    \n    //node.warn(result)\n    msg.payload = result.rows\n    msg.topic = \"get-inc-cf\"\n    //node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})\n\nreturn msg;","outputs":1,"noerr":0,"x":2453.375030517578,"y":415.50000381469727,"wires":[["19591aa4.f91ec5"]]},{"id":"6843834b.6ee7bc","type":"template","z":"7744a89.2e26458","name":"insert adset_final_cf","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"insert into sippycup.adset_final_cf\nselect final_adset_inc_cf.*\nfrom (\nselect *,\n  ((cf0 * slot_weight * slot0_weight) + ((spend0/last_6_total_spend) * spend_weight)) +\n  ((cf1 * slot_weight * slot1_weight) + ((spend1/last_6_total_spend) * spend_weight)) +\n  ((cf2 * slot_weight * slot2_weight) + ((spend2/last_6_total_spend) * spend_weight)) +\n  ((cf3 * slot_weight * slot3_weight) + ((spend3/last_6_total_spend) * spend_weight)) +\n  ((cf4 * slot_weight * slot4_weight) + ((spend4/last_6_total_spend) * spend_weight)) +\n  ((cf5 * slot_weight * slot5_weight) + ((spend5/last_6_total_spend) * spend_weight)) final_cf\nfrom (\nselect \n      account_id,\n      campaign_id,\n      adset_id,\n      timestamp,\n      COALESCE(spend0,0.0) spend0,\n      COALESCE(cf0,0.0) cf0,\n      COALESCE(spend1,0.0) spend1,\n      COALESCE(cf1,0.0) cf1,\n      COALESCE(spend2,0.0) spend2,\n      COALESCE(cf2,0.0) cf2,\n      COALESCE(spend3,0.0) spend3,\n      COALESCE(cf3,0.0) cf3,\n      COALESCE(spend4,0.0) spend4,\n      COALESCE(cf4,0.0) cf4,\n      COALESCE(spend5,0.0) spend5,\n      COALESCE(cf5,0.0) cf5,\n      COALESCE(spend0,0) + COALESCE(spend1,0) + COALESCE(spend2,0) + COALESCE(spend3,0) + COALESCE(spend4,0) + COALESCE(spend5,0) last_6_total_spend, \n      0.7 slot_weight,\n      0.3 spend_weight,\n      0.5 slot0_weight,\n      0.3 spend0_weight,\n      0.7 slot1_weight,\n      0.3 spend1_weight,\n      0.7 slot2_weight,\n      0.3 spend2_weight,\n      0.7 slot3_weight,\n      0.3 spend3_weight,\n      0.7 slot4_weight,\n      0.3 spend4_weight,\n      0.7 slot5_weight,\n      0.3 spend5_weight \nfrom(\nSELECT \n      account_id,\n      campaign_id,\n      adset_id,\n      max(timestamp) \"timestamp\",\n      sum(case when version=1 then delta_spend else null end) spend0,\n      sum(case when version=1 then cf_inc else null end) cf0,\n      sum(case when version=2 then delta_spend else null end) spend1,\n      sum(case when version=2 then cf_inc else null end) cf1,\n      sum(case when version=3 then delta_spend else null end) spend2,\n      sum(case when version=3 then cf_inc else null end) cf2,\n      sum(case when version=4 then delta_spend else null end) spend3,\n      sum(case when version=4 then cf_inc else null end) cf3,\n      sum(case when version=5 then delta_spend else null end) spend4,\n      sum(case when version=5 then cf_inc else null end) cf4,\n      sum(case when version=6 then delta_spend else null end) spend5,\n      sum(case when version=6 then cf_inc else null end) cf5\nfrom (\n  select *\n       ,row_number() over(partition by account_id,campaign_id,adset_id order by timestamp desc) \"version\"\n  FROM sippycup.adset_inc_cf \n  where is_valid = true) adset_inc_cf\nwhere version<=6\ngroup by account_id,\n      campaign_id,\n      adset_id--,timestamp\n      ) agg_adset_inc_cf) final_adset_inc_cf) final_adset_inc_cf\nleft join sippycup.adset_final_cf\n  on adset_final_cf.account_id = final_adset_inc_cf.account_id and \n      adset_final_cf.campaign_id = final_adset_inc_cf.campaign_id and \n      adset_final_cf.adset_id = final_adset_inc_cf.adset_id and\n      adset_final_cf.timestamp = final_adset_inc_cf.timestamp\nwhere  final_adset_inc_cf.account_id is null;","x":2334.625030517578,"y":344.25000381469727,"wires":[["9e6512e1.544e2"]]},{"id":"dce22059.b4e4c","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"get-final-cf","vt":"str"}],"checkall":"true","outputs":1,"x":2881.500030517578,"y":414.25000190734863,"wires":[["d063ccbb.eab3b"]]},{"id":"8729f424.234b68","type":"debug","z":"7744a89.2e26458","name":"","active":true,"console":"false","complete":"payload","x":1383.3750076293945,"y":555.5000057220459,"wires":[]},{"id":"db8e219f.a2d12","type":"template","z":"7744a89.2e26458","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"select *\nfrom sippycup.incremental_ad_data\nleft join sippycup.adset_inc_cf\n  on incremental_ad_data.account_id = adset_inc_cf.account_id and \n      incremental_ad_data.campaign_id = adset_inc_cf.campaign_id and \n      incremental_ad_data.adset_id = adset_inc_cf.adset_id and\n      incremental_ad_data.timestamp = adset_inc_cf.timestamp \nleft join sippycup.adset_final_cf\n  on adset_final_cf.account_id = adset_inc_cf.account_id and \n      adset_final_cf.campaign_id = adset_inc_cf.campaign_id and \n      adset_final_cf.adset_id = adset_inc_cf.adset_id and\n      adset_final_cf.timestamp = adset_inc_cf.timestamp \nwhere DATE_PART('hour', (current_TIMESTAMP) - (TIMESTAMP 'epoch' + (incremental_ad_data.timestamp/1000) * INTERVAL '1 second'))<=(1*1)\norder by incremental_ad_data.account_id,\n      incremental_ad_data.campaign_id,\n      incremental_ad_data.adset_id,\n      incremental_ad_data.timestamp desc\n\n/*select adset_inc_cf.*,\n    spend0,\n    cf0,\n    spend1,\n    cf1,\n    spend2,\n    cf2,\n    spend3,\n    cf3,\n    spend4,\n    cf4,\n    spend5,\n    cf5,\n    last_6_total_spend,\n    final_cf\nfrom sippycup.adset_inc_cf \n    left join adset_final_cf\non adset_final_cf.account_id = adset_inc_cf.account_id and \n      adset_final_cf.campaign_id = adset_inc_cf.campaign_id and \n      adset_final_cf.adset_id = adset_inc_cf.adset_id and\n      adset_final_cf.timestamp = adset_inc_cf.timestamp    \nwhere adset_inc_cf.timestamp={{timestamp}}*/","x":2680.250030517578,"y":345.50000286102295,"wires":[["9bb7e376.35bd7"]]},{"id":"9bb7e376.35bd7","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 30000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    //node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    //node.warn('done')\n    if(err) {\n      return node.error('error running query : ' + err);\n    }\n    \n    //node.warn(result)\n    msg.payload = result.rows\n    msg.topic = \"get-final-cf\"\n    //node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})\n\nreturn msg;","outputs":1,"noerr":0,"x":2756.500030517578,"y":415.50000381469727,"wires":[["dce22059.b4e4c"]]},{"id":"19591aa4.f91ec5","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"get-inc-cf","vt":"str"}],"checkall":"true","outputs":1,"x":2579.000030517578,"y":415.50000381469727,"wires":[["db8e219f.a2d12"]]},{"id":"38e5a364.60e98c","type":"template","z":"7744a89.2e26458","name":"get rows","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"select distinct timestamp\nfrom sippycup.incremental_ad_data\nwhere (TIMESTAMP 'epoch' + (incremental_ad_data.timestamp/1000) * INTERVAL '1 second')>='2017-05-01'\norder by timestamp","x":269.00000762939453,"y":865.5000095367432,"wires":[["cd429787.905ba8"]]},{"id":"cd429787.905ba8","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 300000000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    //node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    //node.warn('done')\n    if(err) {\n      return node.error('error running query : ' + err);\n    }\n    \n    //node.warn(result)\n    msg.payload = result.rows\n    msg.topic = \"get-rows\"\n    //node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})","outputs":1,"noerr":0,"x":414,"y":853.0000095367432,"wires":[["e2a61515.ae1198"]]},{"id":"e2a61515.ae1198","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"get-rows","vt":"str"}],"checkall":"true","outputs":1,"x":555.2499923706055,"y":854.25,"wires":[["ae0d6d7c.3056c","7f9a7ac8.09cbf4"]]},{"id":"d2d5c084.2f3f4","type":"template","z":"7744a89.2e26458","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"select sippycup.adset_calc_cf({{payload.timestamp}}::bigint)","x":2106.500015258789,"y":764.2500095367432,"wires":[["37da3fb2.3bc46"]]},{"id":"37da3fb2.3bc46","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 600000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    node.warn('done')\n    if(err) {\n      return node.error('error running query : ' + err);\n    }\n    \n    node.warn(result)\n    msg.payload = result\n    msg.topic = \"update-rows\"\n    node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})","outputs":1,"noerr":0,"x":2201.500015258789,"y":824.2500095367432,"wires":[["b5b14963.c56c18"]]},{"id":"b5b14963.c56c18","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"update-rows","vt":"str"}],"checkall":"true","outputs":1,"x":2291.5000190734863,"y":764.2500095367432,"wires":[["8979d4d3.419d88"]]},{"id":"8979d4d3.419d88","type":"debug","z":"7744a89.2e26458","name":"","active":true,"console":"false","complete":"true","x":2580.250030517578,"y":931.7500114440918,"wires":[]},{"id":"380488d5.0d6b88","type":"template","z":"7744a89.2e26458","name":"VACUUM FULL","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"VACUUM FULL VERBOSE;","x":2452.750026702881,"y":741.7500095367432,"wires":[["e5a3dc71.39685"]]},{"id":"e5a3dc71.39685","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 600000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    node.warn('done')\n    if(err) {\n      return node.error('error running query : ' + err);\n    }\n    \n    node.warn(result)\n    msg.payload = result\n    msg.topic = \"vaccum\"\n    node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})","outputs":1,"noerr":0,"x":2515.2500190734863,"y":829.2500114440918,"wires":[["4f9f4143.197e2"]]},{"id":"4f9f4143.197e2","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"vaccum","vt":"str"}],"checkall":"true","outputs":1,"x":2640.2500228881836,"y":759.2500114440918,"wires":[["8979d4d3.419d88","d063ccbb.eab3b"]]},{"id":"f8b7e524.6c7e28","type":"catch","z":"7744a89.2e26458","name":"","scope":null,"x":627.1249961853027,"y":1218,"wires":[[]]},{"id":"9a8e6ee5.e9e7e","type":"e-mail","z":"7744a89.2e26458","server":"smtp.gmail.com","port":"465","name":"avigershon@gmail.com","dname":"","x":858.3750076293945,"y":1199.2500076293945,"wires":[]},{"id":"37448335.fe2b4c","type":"template","z":"7744a89.2e26458","name":"REINDEX sippycup","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"REINDEX DATABASE sippycup","x":350.8750305175781,"y":971.7500123977661,"wires":[[]]},{"id":"1ed22101.9a557f","type":"delay","z":"7744a89.2e26458","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":827.1249923706055,"y":924.25,"wires":[["d2d5c084.2f3f4"]]},{"id":"7f9a7ac8.09cbf4","type":"split","z":"7744a89.2e26458","name":"","splt":"\\n","x":705.8750038146973,"y":854.2500104904175,"wires":[["1ed22101.9a557f"]]},{"id":"e02570f8.0eafb","type":"inject","z":"7744a89.2e26458","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":182.74999237060547,"y":1073,"wires":[["37448335.fe2b4c"]]},{"id":"48aa822a.2d74ec","type":"http in","z":"7744a89.2e26458","name":"","url":"/sippycup/adset/latest","method":"get","swaggerDoc":"","x":154.53571319580078,"y":701.7499809265137,"wires":[["138f245c.61188c"]]},{"id":"138f245c.61188c","type":"change","z":"7744a89.2e26458","name":"is http","rules":[{"t":"set","p":"is_http","pt":"msg","to":"true","tot":"bool"}],"action":"","property":"","from":"","to":"","reg":false,"x":361.49999237060547,"y":719.25,"wires":[["ee5b9846.f85fa8"]]},{"id":"ee5b9846.f85fa8","type":"template","z":"7744a89.2e26458","name":"get rows","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"select *,case when new_daily_budget_in_dollars < today_adset_spend then today_adset_spend else new_daily_budget_in_dollars end final_new_daily_budget_in_dollars\nfrom (\n\nselect *,\n(GREATEST(case when campaign_type='ROAS' then ROAS_min_safe_budget else CPA_min_safe_budget end, \n(case when (lifetime_spend > 2*(last_7_days_acc_spend/last_7_days_acc_conversions) and lifetime_conversions = 0) or\n    (lifetime_spend > 3*(last_7_days_acc_spend/last_7_days_acc_conversions) and lifetime_conversions <=1) then\n  0\nelse \n  case when lifetime_spend<200 then\n    --KSM\n    case when campaign_type='ROAS' then\n      --ROAS\n      case when lifetime_conversions>0 and last_7_days_acc_revenue>0 and \n          (lifetime_spend / lifetime_conversions) > (last_7_days_acc_revenue / last_7_days_acc_conversions / target_roi) * GREATEST((-0.00125 * lifetime_spend)+1.35,1.1) then \n        case when daily_budget_in_dollars < 100 then\n          0\n        else \n          case when final_cf>1 then \n            final_cf\n          else\n            power(final_cf,3)\n          end\n        end\n      end\n    else\n      --CPA\n      case when lifetime_conversions>0 and \n          (lifetime_spend / lifetime_conversions) > 1 * GREATEST((-0.00125 * lifetime_spend)+1.35,1.0) then \n        case when daily_budget_in_dollars < 100 then\n          0\n        else \n          case when final_cf>1 then \n            final_cf\n          else\n            power(final_cf,3)\n          end\n        end\n      end\n    end\n  else\n    --Last X Days KM\n    case when campaign_type='ROAS' then\n      --ROAS\n      case when last_x_days_adset_spend>0 and\n          (last_x_days_adset_revenue / last_x_days_adset_spend) < target_roi then \n        case when daily_budget_in_dollars < 100 then\n          0\n        else \n          case when final_cf>1 then \n            final_cf\n          else\n            power(final_cf,3)\n          end\n        end\n      end\n    else\n      --CPA\n      1\n    end\n  end\nend) * (daily_budget_in_dollars-today_adset_spend)) + today_adset_spend) new_daily_budget_in_dollars,\n'GREATEST(case when campaign_type[=' || campaign_type || ']=''ROAS'' then ROAS_min_safe_budget[=' || trim(to_char(ROAS_min_safe_budget,'99999999999999999D99')) || '] else CPA_min_safe_budget[=' || trim(to_char(CPA_min_safe_budget,'99999999999999999D99')) || '] end, \n(case when (lifetime_spend[=' || trim(to_char(lifetime_spend,'99999999999999999D99')) || '] > 2*(last_7_days_acc_spend[=' || trim(to_char(last_7_days_acc_spend,'99999999999999999D99')) || ']/last_7_days_acc_conversions[=' || trim(to_char(last_7_days_acc_conversions,'99999999999999999D99')) || '])[=' || trim(to_char(2*(last_7_days_acc_spend/last_7_days_acc_conversions),'99999999999999999D99')) || '] and lifetime_conversions[=' || trim(to_char(lifetime_conversions,'99999999999999999D99')) || '] = 0) or\n    (lifetime_spend[=' || trim(to_char(lifetime_spend,'99999999999999999D99')) || '] > 3*(last_7_days_acc_spend[=' || trim(to_char(last_7_days_acc_spend,'99999999999999999D99')) || ']/last_7_days_acc_conversions[=' || trim(to_char(last_7_days_acc_conversions,'99999999999999999D99')) || '])[=' || trim(to_char(3*(last_7_days_acc_spend/last_7_days_acc_conversions),'99999999999999999D99')) || '] and lifetime_conversions[=' || trim(to_char(lifetime_conversions,'99999999999999999D99')) || '] <=1) then\n  0\nelse \n  case when lifetime_spend[=' || trim(to_char(lifetime_spend,'99999999999999999D99')) || ']<200 then\n    --KSM\n    case when campaign_type[=' || campaign_type || ']=''ROAS'' then\n      --ROAS\n      case when lifetime_conversions[=' || trim(to_char(lifetime_conversions,'99999999999999999D99')) || ']>0 and last_7_days_acc_revenue[=' || trim(to_char(last_7_days_acc_revenue,'99999999999999999D99')) || ']>0 and \n          (lifetime_spend[=' || trim(to_char(lifetime_spend,'99999999999999999D99')) || '] / lifetime_conversions[=' || trim(to_char(lifetime_conversions,'99999999999999999D99')) || ']) (lifetime_spend / lifetime_conversions)[=' || trim(to_char(lifetime_conversions,'99999999999999999D99')) || '] > (last_7_days_acc_revenue[=' || trim(to_char(last_7_days_acc_revenue,'99999999999999999D99')) || '] / last_7_days_acc_conversions[=' || trim(to_char(last_7_days_acc_conversions,'99999999999999999D99')) || '] / target_roi[=' || trim(to_char(target_roi,'99999999999999999D99')) || '])[=' || trim(to_char((last_7_days_acc_revenue / last_7_days_acc_conversions / target_roi),'99999999999999999D99')) || '] * GREATEST((-0.00125 * lifetime_spend[=' || trim(to_char(lifetime_spend,'99999999999999999D99')) || '])+1.35,1.1)[=' || trim(to_char(GREATEST((-0.00125 * lifetime_spend)+1.35,1.1),'99999999999999999D99')) || '] then \n        case when daily_budget_in_dollars[=' || trim(to_char(daily_budget_in_dollars,'99999999999999999D99')) || '] < 100 then\n          0\n        else \n          case when final_cf[=' || trim(to_char(final_cf,'99999999999999999D99')) || ']>1 then \n            final_cf[=' || trim(to_char(final_cf,'99999999999999999D99')) || ']\n          else\n            power(final_cf,3)[=' || trim(to_char(power(final_cf,3),'99999999999999999D99')) || ']\n          end\n        end\n      end\n    else\n      --CPA\n      case when lifetime_conversions[=' || trim(to_char(lifetime_conversions,'99999999999999999D99')) || ']>0 and \n          (lifetime_spend[=' || trim(to_char(lifetime_spend,'99999999999999999D99')) || '] / lifetime_conversions[=' || trim(to_char(lifetime_conversions,'99999999999999999D99')) || ']) > 1 * GREATEST((-0.00125 * lifetime_spend[=' || trim(to_char(lifetime_spend,'99999999999999999D99')) || '])+1.35,1.0)[=' || trim(to_char(GREATEST((-0.00125 * lifetime_spend)+1.35,1.1),'99999999999999999D99')) || '] then \n        case when daily_budget_in_dollars[=' || trim(to_char(daily_budget_in_dollars,'99999999999999999D99')) || '] < 100 then\n          0\n        else \n          case when final_cf[=' || trim(to_char(final_cf,'99999999999999999D99')) || ']>1 then \n            final_cf[=' || trim(to_char(final_cf,'99999999999999999D99')) || ']\n          else\n            power(final_cf,3)[=' || trim(to_char(power(final_cf,3),'99999999999999999D99')) || ']\n          end\n        end\n      end\n    end\n  else\n    --Last X Days KM\n    case when campaign_type[=' || campaign_type || ']=''ROAS'' then\n      --ROAS\n      case when last_x_days_adset_spend[=' || trim(to_char(last_x_days_adset_spend,'99999999999999999D99')) || ']>0 and\n          (last_x_days_adset_revenue[=' || trim(to_char(last_x_days_adset_revenue,'99999999999999999D99')) || '] / last_x_days_adset_spend[=' || trim(to_char(last_x_days_adset_spend,'99999999999999999D99')) || ']) < target_roi[=' || trim(to_char(target_roi,'99999999999999999D99')) || '] then \n        case when daily_budget_in_dollars[=' || trim(to_char(daily_budget_in_dollars,'99999999999999999D99')) || '] < 100 then\n          0\n        else \n          case when final_cf[=' || trim(to_char(final_cf,'99999999999999999D99')) || ']>1 then \n            final_cf[=' || trim(to_char(final_cf,'99999999999999999D99')) || ']\n          else\n            power(final_cf,3)[=' || trim(to_char(power(final_cf,3),'99999999999999999D99')) || ']\n          end\n        end\n      end\n    else\n      --CPA\n      1\n    end\n  end\nend) * daily_budget_in_dollars[=' || trim(to_char(daily_budget_in_dollars,'99999999999999999D99')) || ']-today_adset_spend[=' || trim(to_char(today_adset_spend,'99999999999999999D99')) || '])' debug\n \nfrom (\n\nSELECT TO_CHAR((TIMESTAMP 'epoch' + (adset_inc_cf.timestamp/1000) * INTERVAL '1 second') AT TIME ZONE 'UTC-3','YYYY-MM-DD hh24:MI') increment_date,\n       adset_inc_cf.account_id,\n       adset_inc_cf.campaign_id,\n       adset_inc_cf.adset_id,\n       adset_inc_cf.last_7_days_acc_spend,\n       adset_inc_cf.lifetime_spend,\n       adset_inc_cf.previous_spend,\n       adset_inc_cf.delta_spend,\n       adset_inc_cf.lifetime_pre_conversions,\n       adset_inc_cf.previous_pre_conversions,\n       adset_inc_cf.delta_pre_conversions,\n       adset_inc_cf.last_7_days_acc_pre_conversions,\n       adset_inc_cf.lifetime_revenue,\n       adset_inc_cf.delta_revenue,\n       adset_inc_cf.lifetime_conversions,\n       adset_inc_cf.delta_conversions,\n       adset_inc_cf.lifetime_scval,\n       adset_inc_cf.vrev_adset_inc,\n       adset_inc_cf.pre_conversion_cpa,\n       adset_inc_cf.target_roi,\n       adset_inc_cf.cf_inc,\n       adset_inc_cf.timestamp,\n       adset_inc_cf.previous_timestamp,\n       adset_inc_cf.is_valid,\n       spend0,\n       cf0,\n       spend1,\n       cf1,\n       spend2,\n       cf2,\n       spend3,\n       cf3,\n       spend4,\n       cf4,\n       spend5,\n       cf5,\n       last_6_total_spend,\n       slot_weight,\n       spend_weight,\n       slot0_weight,\n       spend0_weight,\n       slot1_weight,\n       spend1_weight,\n       slot2_weight,\n       spend2_weight,\n       slot3_weight,\n       spend3_weight,\n       slot4_weight,\n       spend4_weight,\n       slot5_weight,\n       spend5_weight,\n       case when cf0<1 then LEAST(final_cf,0.95) else LEAST(final_cf,3.5) end final_cf,\n      cast('ROAS' as varchar(255)) campaign_type,\n      today_adset_spend,\n      daily_budget,\n      last_7_days_acc_conversions,\n      last_7_days_acc_revenue,\n      last_x_days_adset_spend,\n      last_x_days_adset_revenue,\n      daily_budget/100 daily_budget_in_dollars,\n      today_adset_revenue/target_roi ROAS_min_safe_budget,\n      today_adset_conversions * 1/*TargetCPA*/ CPA_min_safe_budget\nfrom sippycup.adset_inc_cf\ninner join (\n            select account_id,campaign_id,adset_id,\n                  max(lifetime_spend)-min(lifetime_spend) last_x_days_adset_spend,\n                  max(lifetime_revenue)-min(lifetime_revenue) last_x_days_adset_revenue,\n                  max(lifetime_conversions)-min(lifetime_conversions) last_x_days_adset_conversions,\n                  max(lifetime_pre_conversions)-min(lifetime_pre_conversions) last_x_days_adset_pre_conversions\n            from sippycup.adset_inc_cf\n            where (TIMESTAMP 'epoch' + (adset_inc_cf.timestamp/1000) * INTERVAL '1 second') between \n                    ((TIMESTAMP 'epoch' + (adset_inc_cf.timestamp/1000) * INTERVAL '1 second')) - INTERVAL '5 day' and (TIMESTAMP 'epoch' + (adset_inc_cf.timestamp/1000) * INTERVAL '1 second')\n                    and DATE_PART('day', (current_TIMESTAMP) - (TIMESTAMP 'epoch' + (adset_inc_cf.timestamp/1000) * INTERVAL '1 second'))<=5\n            group by adset_inc_cf.account_id,\n                      adset_inc_cf.campaign_id,\n                       adset_inc_cf.adset_id\n            ) adset_inc_cf_last_x_days\non adset_inc_cf_last_x_days.account_id = adset_inc_cf.account_id and \n  adset_inc_cf_last_x_days.campaign_id = adset_inc_cf.campaign_id and \n  adset_inc_cf_last_x_days.adset_id = adset_inc_cf.adset_id\ninner join (\n            select account_id,campaign_id,adset_id,\n                  max(lifetime_spend)-min(lifetime_spend) today_adset_spend,\n                  max(lifetime_revenue)-min(lifetime_revenue) today_adset_revenue,\n                  max(lifetime_conversions)-min(lifetime_conversions) today_adset_conversions,\n                  max(lifetime_pre_conversions)-min(lifetime_pre_conversions) today_adset_pre_conversions\n            from sippycup.adset_inc_cf\n            where  TO_CHAR((TIMESTAMP 'epoch' + ((select max(timestamp) from sippycup.adset_inc_cf)/1000) * INTERVAL '1 second') AT TIME ZONE 'UTC-3','YYYY-MM-DD')=\n                    TO_CHAR((TIMESTAMP 'epoch' + (adset_inc_cf.timestamp/1000) * INTERVAL '1 second') AT TIME ZONE 'UTC-3','YYYY-MM-DD')\n            group by adset_inc_cf.account_id,\n                      adset_inc_cf.campaign_id,\n                       adset_inc_cf.adset_id\n            ) adset_inc_cf_today_days\non adset_inc_cf_today_days.account_id = adset_inc_cf.account_id and \n  adset_inc_cf_today_days.campaign_id = adset_inc_cf.campaign_id and \n  adset_inc_cf_today_days.adset_id = adset_inc_cf.adset_id\nleft join sippycup.adset_final_cf\non adset_final_cf.account_id = adset_inc_cf.account_id and \n      adset_final_cf.campaign_id = adset_inc_cf.campaign_id and \n      adset_final_cf.adset_id = adset_inc_cf.adset_id and\n      adset_final_cf.timestamp = adset_inc_cf.timestamp\nwhere adset_inc_cf.timestamp=(select max(timestamp) from sippycup.adset_inc_cf))a\n\n  )a\n  \n\n","x":512.7499923706055,"y":721.75,"wires":[["45024b1d.50faf4"]]},{"id":"45024b1d.50faf4","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 300000000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    //node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    //node.warn('done')\n    if(err) {\n      return node.error('error running query : ' + err);\n    }\n    \n    //node.warn(result)\n    msg.payload = result.rows\n    msg.topic = \"get-rows\"\n    //node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})","outputs":1,"noerr":0,"x":657.7499847412109,"y":709.25,"wires":[["29787b98.a89be4"]]},{"id":"29787b98.a89be4","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"get-rows","vt":"str"}],"checkall":"true","outputs":1,"x":798.9999771118164,"y":710.4999904632568,"wires":[["5820c45e.8deb6c"]]},{"id":"9b03d78c.0c34f8","type":"switch","z":"7744a89.2e26458","name":"","property":"is_http","propertyType":"msg","rules":[{"t":"neq","v":"undefined","vt":"jsonata"},{"t":"else"}],"checkall":"true","outputs":2,"x":1594.7142868041992,"y":730.321418762207,"wires":[["38cb1bee.5067e4"],["9dd1669.c153b98"]]},{"id":"1b0b4d9f.42a872","type":"http response","z":"7744a89.2e26458","name":"","x":1869.410587310791,"y":626.5357666015625,"wires":[]},{"id":"555d45ce.5e14ec","type":"function","z":"8f12258d.a834d8","name":"Get campaign data","func":"msg.campaign.adsets = msg.payload.data;\n\nreturn msg;","outputs":1,"noerr":0,"x":1870,"y":180,"wires":[["80a9f617.a69888"]]},{"id":"90bec8a7.3f5b48","type":"http request","z":"8f12258d.a834d8","name":"Get adset budget","method":"GET","ret":"obj","url":"https://graph.facebook.com/v2.11/{{{campaign.id}}}/adsets/?fields=id,end_time,lifetime_budget,daily_budget,effective_status&date_preset=lifetime&level=adset&limit=10000&p=2&access_token={{{fb_account.access_token}}}","tls":"","x":1670,"y":180,"wires":[["555d45ce.5e14ec"]]},{"id":"5d9d9c2b.f2af24","type":"function","z":"7744a89.2e26458","name":"","func":"var ad = msg.payload\n\nmsg.partitionkey = ad.account.account_id + \".\" + ad.adset_id + \".\" + ad.ad_id\nmsg.payload = JSON.stringify(ad)\n\nreturn msg;","outputs":1,"noerr":0,"x":3790,"y":260,"wires":[[]]},{"id":"9dd1669.c153b98","type":"debug","z":"7744a89.2e26458","name":"","active":true,"console":"false","complete":"false","x":1708.4644565582275,"y":870.1427774429321,"wires":[]},{"id":"6fdf8e3e.6a516","type":"inject","z":"7744a89.2e26458","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":157.03570665631975,"y":782.9999999999999,"wires":[["ee5b9846.f85fa8"]]},{"id":"5820c45e.8deb6c","type":"split","z":"7744a89.2e26458","name":"","splt":"\\n","x":932.7500534057617,"y":711.5714721679688,"wires":[["f595a217.abe78"]]},{"id":"f595a217.abe78","type":"switch","z":"7744a89.2e26458","name":"is debug mode","property":"payload.debug","propertyType":"msg","rules":[{"t":"neq","v":"undefined","vt":"jsonata"},{"t":"else"}],"checkall":"true","outputs":2,"x":1097.7500076293945,"y":714.428560256958,"wires":[["52162e93.0942e"],[]]},{"id":"52162e93.0942e","type":"function","z":"7744a89.2e26458","name":"","func":"msg.payload.debug = msg.payload.debug.split(\"\\n\")\n\nreturn msg;","outputs":1,"noerr":0,"x":1272.749984741211,"y":707.2857666015625,"wires":[["fcb125b8.6c0138"]]},{"id":"fcb125b8.6c0138","type":"json","z":"7744a89.2e26458","name":"","x":1392.749900817871,"y":764.428560256958,"wires":[["422faace.fa7e34"]]},{"id":"422faace.fa7e34","type":"json","z":"7744a89.2e26458","name":"","x":1497.7499866485596,"y":684.4285793304443,"wires":[["9b03d78c.0c34f8"]]},{"id":"38cb1bee.5067e4","type":"join","z":"7744a89.2e26458","name":"","mode":"auto","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","timeout":"","count":"","x":1647.0357066563197,"y":638.7142857142857,"wires":[["1b0b4d9f.42a872"]]},{"id":"6c18590b.8c8088","type":"function","z":"7744a89.2e26458","name":"","func":"msg.headers = {\n    \"Content-Type\" : \"text/html\"\n}\n\nmsg.payload = syntaxHighlight(msg.payload);// \"<pre>\" + msg.payload + \"</pre>\"\n\nfunction syntaxHighlight(json) {\n    if (typeof json != 'string') {\n         json = JSON.stringify(json, undefined, 2);\n    }\n    json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n        var cls = 'number';\n        if (/^\"/.test(match)) {\n            if (/:$/.test(match)) {\n                cls = 'key';\n            } else {\n                cls = 'string';\n            }\n        } else if (/true|false/.test(match)) {\n            cls = 'boolean';\n        } else if (/null/.test(match)) {\n            cls = 'null';\n        }\n        return '<span class=\"' + cls + '\"><pre>' + match + '</pre></span>';\n    });\n}\nreturn msg;","outputs":1,"noerr":0,"x":1787.7499923706055,"y":698.7142944335938,"wires":[["1b0b4d9f.42a872"]]},{"id":"c37323ad.12b63","type":"debug","z":"7744a89.2e26458","name":"","active":true,"console":"false","complete":"true","x":755.8749923706055,"y":454.25000381469727,"wires":[]},{"id":"8aa75758.c2eba8","type":"config","z":"7744a89.2e26458","name":"data","properties":[{"p":"data","pt":"flow","to":"{\"name\":\"luka\",\"accounts\":[{\"access_token\":\"EAAMU4ZAfHJMYBADRHzQrfsv3mZA3hKGxrZAtR2TT8zmZBZCU8mAmp2Y2tpum1leunpBsvusgcOItb05G4xUKSumBT2A3yNvEvNkKtoroMM8oh4V6CllFP20aNq3VXZBDNfn1TzWZAijitOjI4yvDzZAZBEq6hSPu9Yiyvv4kmxl7z6gZDZD\",\"campaigns\":[{\"effective_status\":\"ACTIVE\",\"id\":\"6090027468460\"},{\"effective_status\":\"ACTIVE\",\"id\":\"6089766492460\"}],\"id\":\"1381220405489176\"}]}","tot":"json"}],"active":true,"x":110,"y":60,"wires":[]},{"id":"da4376a7.6f9bc8","type":"change","z":"8f12258d.a834d8","name":"Set Payload","rules":[{"t":"set","p":"payload","pt":"msg","to":"accounts","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":490,"y":180,"wires":[["4c2d25c3.a769cc"]]},{"id":"f7e86095.f0b16","type":"debug","z":"7744a89.2e26458","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":3990,"y":180,"wires":[]},{"id":"4bbbb79a.0799a8","type":"debug","z":"7744a89.2e26458","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2970,"y":120,"wires":[]},{"id":"eb09f4df.b47df8","type":"function","z":"7744a89.2e26458","name":"Stringify Message","func":"\nmsg = {\n    documentIndex: msg.documentIndex,\n    documentType: msg.documentType,\n    documentId: msg.documentId,\n    payload: msg.payload,\n    debug: msg.debug,\n    flow: msg.flow\n}\n\nmsg.payload = JSON.stringify(msg);\nmsg.topic   = msg.flow + \"-save-document\";\n\nreturn msg;","outputs":1,"noerr":0,"x":4030,"y":260,"wires":[[]]},{"id":"ec5c6573.797288","type":"rdkafka out","z":"7744a89.2e26458","name":"save-document","topic":"","key":"","partition":-1,"broker":"c0e67585.074708","x":4260,"y":260,"wires":[]},{"id":"bfd28ba5.0fd2a8","type":"config","z":"7744a89.2e26458","name":"debug","properties":[{"p":"debug","pt":"flow","to":"false","tot":"bool"}],"active":true,"x":290,"y":60,"wires":[]},{"id":"d3972b0.82f3cd8","type":"function","z":"7744a89.2e26458","name":"set payload with params.Item","func":"msg.payload = msg.params.Item;\n\nreturn msg;","outputs":1,"noerr":0,"x":3600,"y":440,"wires":[["21ad144f.d2f16c"]]},{"id":"21ad144f.d2f16c","type":"function","z":"7744a89.2e26458","name":"set default values","func":"msg.payload = msg.params.Item;\nmsg.db_payload = msg.payload\n\nmsg.db_payload.impressions===undefined ? 0 : msg.db_payload.impressions\nmsg.db_payload.campaign_id===undefined ? \"\" : msg.db_payload.campaign_id\nmsg.db_payload.campaign_name===undefined ? \"\" : msg.db_payload.campaign_name\nmsg.db_payload.adset_id===undefined ? \"\" : msg.db_payload.adset_id\nmsg.db_payload.adset_name===undefined ? \"\" : msg.db_payload.adset_name\nmsg.db_payload.ad_id===undefined ? \"\" : msg.db_payload.ad_id\nmsg.db_payload.ad_name===undefined ? \"\" : msg.db_payload.ad_name\nmsg.db_payload.spend===undefined ? 0 : msg.db_payload.spend\nmsg.db_payload.date_start===undefined ? \"\" : msg.db_payload.date_start\nmsg.db_payload.date_stop===undefined ? \"\" : msg.db_payload.date_stop\nmsg.db_payload.pre_conversions===undefined ? 0 : msg.db_payload.pre_conversions\nmsg.db_payload.conversions===undefined ? 0 : msg.db_payload.conversions\nmsg.db_payload.revenue===undefined ? 0 : msg.db_payload.revenue\nmsg.db_payload.adset.adset_id===undefined ? \"\" : msg.db_payload.adset.adset_id\nmsg.db_payload.adset.pre_conversions===undefined ? 0 : msg.db_payload.adset.pre_conversions\nmsg.db_payload.adset.conversions===undefined ? 0 : msg.db_payload.adset.conversions\nmsg.db_payload.adset.revenue===undefined ? 0 : msg.db_payload.adset.revenue\nmsg.db_payload.campaign.pre_conversions===undefined ? 0 : msg.db_payload.campaign.pre_conversions\nmsg.db_payload.campaign.conversions===undefined ? 0 : msg.db_payload.campaign.conversions\nmsg.db_payload.campaign.revenue===undefined ? 0 : msg.db_payload.campaign.revenue\nmsg.db_payload.account.account_id===undefined ? 0 : msg.db_payload.account.account_id\nmsg.db_payload.account.pre_conversions===undefined ? 0 : msg.db_payload.account.pre_conversions\nmsg.db_payload.account.conversions===undefined ? 0 : msg.db_payload.account.conversions\nmsg.db_payload.account.revenue===undefined ? 0 : msg.db_payload.account.revenue\nmsg.db_payload.Pad===undefined ? 0 : msg.db_payload.Pad\nmsg.db_payload.Rad===undefined ? 0 : msg.db_payload.Rad\nmsg.db_payload.Padset===undefined ? 0 : msg.db_payload.Padset\nmsg.db_payload.Radset===undefined ? 0 : msg.db_payload.Radset\nmsg.db_payload.Pcampaign===undefined ? 0 : msg.db_payload.Pcampaign\nmsg.db_payload.Rcampaign===undefined ? 0 : msg.db_payload.Rcampaign\nmsg.db_payload.Paccount===undefined ? 0 : msg.db_payload.Paccount\nmsg.db_payload.Raccount===undefined ? 0 : msg.db_payload.Raccount\nmsg.db_payload.debug.part1===undefined ? 0 : msg.db_payload.debug.part1\nmsg.db_payload.debug.part2===undefined ? 0 : msg.db_payload.debug.part2\nmsg.db_payload.debug.part3===undefined ? 0 : msg.db_payload.debug.part3\nmsg.db_payload.debug.part4===undefined ? 0 : msg.db_payload.debug.part4\nmsg.db_payload.SCVal===undefined ? 0 : msg.db_payload.SCVal\nmsg.db_payload.VRevN===undefined ? 0 : msg.db_payload.VRevN\nmsg.db_payload.timestamp===undefined ? 0 : msg.db_payload.timestamp\nmsg.db_payload.adset_lifetime_budget===undefined ? 0 : msg.db_payload.adset_lifetime_budget\nmsg.db_payload.adset_daily_budget===undefined ? 0 : msg.db_payload.adset_daily_budget\n\nreturn msg;","outputs":1,"noerr":0,"x":3874.1250076293945,"y":361.5,"wires":[["baa69b14.606688"]]},{"id":"baa69b14.606688","type":"template","z":"7744a89.2e26458","name":"insert incremental_ad_data","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"(\n  {{db_payload.impressions}},\n  '{{db_payload.campaign_id}}',\n  '{{db_payload.campaign_name}}',\n  '{{db_payload.adset_id}}',\n  '{{db_payload.adset_name}}',\n  '{{db_payload.ad_id}}',\n  '{{db_payload.ad_name}}',\n  {{db_payload.spend}},\n  '{{db_payload.date_start}}',\n  '{{db_payload.date_stop}}',\n  {{db_payload.pre_conversions}},\n  {{db_payload.conversions}},\n  {{db_payload.revenue}},\n  '{{db_payload.adset.adset_id}}',\n  {{db_payload.adset.pre_conversions}},\n  {{db_payload.adset.conversions}},\n  {{db_payload.adset.revenue}},\n  {{db_payload.campaign.pre_conversions}},\n  {{db_payload.campaign.conversions}},\n  {{db_payload.campaign.revenue}},\n  '1381220405489176',\n  {{db_payload.account.pre_conversions}},\n  {{db_payload.account.conversions}},\n  {{db_payload.account.revenue}},\n  {{db_payload.Pad}},\n  {{db_payload.Rad}},\n  {{db_payload.Padset}},\n  {{db_payload.Radset}},\n  {{db_payload.Pcampaign}},\n  {{db_payload.Rcampaign}},\n  {{db_payload.Paccount}},\n  {{db_payload.Raccount}},\n  {{db_payload.debug.part1}},\n  {{db_payload.debug.part2}},\n  {{db_payload.debug.part3}},\n  {{db_payload.debug.part4}},\n  {{db_payload.SCVal}},\n  {{db_payload.VRevN}},\n  {{db_payload.timestamp}},\n  {{db_payload.adset_lifetime_budget}},\n  {{db_payload.adset_daily_budget}}\n)","x":4169.7500076293945,"y":345.24999809265137,"wires":[["615c1d71.099524"]]},{"id":"615c1d71.099524","type":"join","z":"7744a89.2e26458","name":"","mode":"custom","build":"string","property":"payload","propertyType":"msg","key":"topic","joiner":",","timeout":"","count":"","x":4304.1250076293945,"y":397.75000190734863,"wires":[["46d47943.747a28"]]},{"id":"46d47943.747a28","type":"template","z":"7744a89.2e26458","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"INSERT INTO sippycup.incremental_ad_data\n(\n  impressions,\n  campaign_id,\n  campaign_name,\n  adset_id,\n  adset_name,\n  ad_id,\n  ad_name,\n  spend,\n  date_start,\n  date_stop,\n  pre_conversions,\n  conversions,\n  revenue,\n  adset_adset_id,\n  adset_pre_conversions,\n  adset_conversions,\n  adset_revenue,\n  campaign_pre_conversions,\n  campaign_conversions,\n  campaign_revenue,\n  account_id,\n  account_pre_conversions,\n  account_conversions,\n  account_revenue,\n  pad,\n  rad,\n  padset,\n  radset,\n  pcampaign,\n  rcampaign,\n  paccount,\n  raccount,\n  debug_part1,\n  debug_part2,\n  debug_part3,\n  debug_part4,\n  scval,\n  vrev,\n  TIMESTAMP,\n  adset_lifetime_budget,\n  adset_daily_budget\n)\nVALUES {{payload}};","x":4382.8750076293945,"y":340.25000381469727,"wires":[["d4c5b120.df57"]]},{"id":"d4c5b120.df57","type":"function","z":"7744a89.2e26458","name":"","func":"msg.payload = msg.payload.replace(/&#39;/g,\"'\")\n\nreturn msg;","outputs":1,"noerr":0,"x":4505.375019073486,"y":341.49999809265137,"wires":[["9d931d96.0ca1c"]]},{"id":"9d931d96.0ca1c","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 30000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    node.warn('done')\n    if(err) {\n      return node.error('error running query', err);\n    }\n    \n    node.warn(result)\n    msg.payload = result\n    msg.payload.timestamp = msg.timestamp\n    msg.topic = \"save-inc-data\"\n    node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})","outputs":1,"noerr":0,"x":4553.500011444092,"y":469.0000009536743,"wires":[["7a7c6818.5b4488"]]},{"id":"7a7c6818.5b4488","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"save-inc-data","vt":"str"}],"checkall":"true","outputs":1,"x":4654.125015258789,"y":612.75,"wires":[["f6fd95c6.d5bd08"]]},{"id":"f6fd95c6.d5bd08","type":"template","z":"7744a89.2e26458","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"select sippycup.adset_calc_cf({{payload.timestamp}}::bigint)","x":4751.0000076293945,"y":690.2500038146973,"wires":[["33520264.b6419e"]]},{"id":"33520264.b6419e","type":"function","z":"7744a89.2e26458","name":"","func":"var pg = global.get('pg');\n \n// create a config to configure both pooling behavior \n// and client options \n// note: all config is optional and the environment variables \n// will be read if the config is not present \nvar config = {\n  user: 'root', //env var: PGUSER \n  database: 'sippycup', //env var: PGDATABASE \n  password: 'lioran020', //env var: PGPASSWORD \n  host: 'sippycup.c8wilxdbvlmp.us-east-1.rds.amazonaws.com', // Server hosting the postgres database \n  port: 5432, //env var: PGPORT \n  max: 10, // max number of clients in the pool \n  idleTimeoutMillis: 600000, // how long a client is allowed to remain idle before being closed \n};\n \n//this initializes a connection pool \n//it will keep idle connections open for 30 seconds \n//and set a limit of maximum 10 idle clients \nvar pool = new pg.Pool(config);\n \n// to run a query we can acquire a client from the pool, \n// run a query on the client, and then return the client to the pool \npool.connect(function(err, client, done) {\n    node.warn('connecting to pg')\n  if(err) {\n    return node.warn('error fetching client from pool', err);\n  }\n  client.query(msg.payload, function(err, result) {\n    //call `done(err)` to release the client back to the pool (or destroy it if there is an error) \n    done(err);\n    node.warn('done')\n    if(err) {\n      return node.error('error running query : ' + err);\n    }\n    \n    node.warn(result)\n    msg.payload = result\n    msg.topic = \"update-rows\"\n    node.warn('sending message')\n    node.send(msg)\n    //node.warn(result.rows[0].number);\n    //output: 1 \n  });\n});\n \npool.on('error', function (err, client) {\n  // if an error is encountered by a client while it sits idle in the pool \n  // the pool itself will emit an error event with both the error and \n  // the client which emitted the original error \n  // this is a rare occurrence but can happen if there is a network partition \n  // between your application and the database, the database restarts, etc. \n  // and so you might want to handle it and at least log it out \n  node.error('idle client error', err.message, err.stack)\n})","outputs":1,"noerr":0,"x":4846.0000076293945,"y":750.2500038146973,"wires":[["3a8121f8.e8688e"]]},{"id":"3a8121f8.e8688e","type":"switch","z":"7744a89.2e26458","name":"","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"update-rows","vt":"str"}],"checkall":"true","outputs":1,"x":4936.000011444092,"y":690.2500038146973,"wires":[[]]},{"id":"f523bf20.4abe3","type":"change","z":"aca500a5.26ea7","name":"Set topic","rules":[{"t":"set","p":"topic","pt":"msg","to":"$uppercase(msg.flow & '_tasks')","tot":"jsonata"}],"action":"","property":"","from":"","to":"","reg":false,"x":1240,"y":380,"wires":[["f721cae3.107988","87cc6828.3edc08"]]},{"id":"90443b65.a1a688","type":"switch","z":"72706932.2ca048","name":"Topic Router","property":"topic","propertyType":"msg","rules":[{"t":"eq","v":"ALBERT_TASKS","vt":"str"},{"t":"eq","v":"ALBERT_GOOGLE_QUERIES_STREAM","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":370,"y":320,"wires":[["f522eff1.97f54"],[]]},{"id":"2e292b0d.4abd14","type":"debug","z":"72706932.2ca048","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":367.5,"y":422.5,"wires":[]},{"id":"db638d85.09fcd","type":"debug","z":"72706932.2ca048","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","x":1219.1367492675781,"y":299.07423973083496,"wires":[]},{"id":"e035feb8.0f1c8","type":"subflow:8f12258d.a834d8","z":"7744a89.2e26458","name":"","x":1930,"y":180.12500047683716,"wires":[["f7e86095.f0b16"],["f7e86095.f0b16"],["f7e86095.f0b16"]]},{"id":"b805e6b0.1b8008","type":"subflow:8f12258d.a834d8","z":"72706932.2ca048","name":"","x":880,"y":260,"wires":[["df2f529f.c505"],["af496842.86b978"],["dcb59039.cf933"]]},{"id":"bd26c61.d037738","type":"change","z":"8f12258d.a834d8","name":"","rules":[{"t":"set","p":"payload.id","pt":"msg","to":"$base64encode($lowercase($string(msg.payload.ad_id & ';' & msg.timestamp)))","tot":"jsonata"},{"t":"set","p":"timestamp","pt":"msg","to":"","tot":"date"},{"t":"set","p":"topic","pt":"msg","to":"FACEBOOK_ADS_DATA","tot":"str"},{"t":"set","p":"key","pt":"msg","to":"payload.id","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":3339.7696380615234,"y":182.00390815734863,"wires":[["826030c9.4d64f"]]},{"id":"826030c9.4d64f","type":"json","z":"8f12258d.a834d8","name":"","property":"payload","action":"str","pretty":false,"x":3541.769634246826,"y":182.00390815734863,"wires":[[]]},{"id":"df2f529f.c505","type":"rdkafka out","z":"72706932.2ca048","name":"Kafka","topic":"","key":"","partition":-1,"broker":"c0e67585.074708","x":1073.0195770263672,"y":356.00389766693115,"wires":[]},{"id":"af496842.86b978","type":"debug","z":"72706932.2ca048","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1207.769546508789,"y":392.00404167175293,"wires":[]},{"id":"dcb59039.cf933","type":"debug","z":"72706932.2ca048","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1212.26953125,"y":436.0039052963257,"wires":[]},{"id":"cbd17d9d.b7716","type":"change","z":"8f12258d.a834d8","name":"","rules":[{"t":"set","p":"payload","pt":"msg","to":"payload.data","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1237.640625,"y":243.3828125,"wires":[["c0694fa4.fb584"]]}]